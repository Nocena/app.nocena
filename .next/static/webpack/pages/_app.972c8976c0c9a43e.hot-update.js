"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/utils/api/dgraph.ts":
/*!*********************************!*\
  !*** ./src/utils/api/dgraph.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserFromDgraph: () => (/* binding */ getUserFromDgraph),\n/* harmony export */   registerUser: () => (/* binding */ registerUser),\n/* harmony export */   updateBio: () => (/* binding */ updateBio),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"./node_modules/.pnpm/uuid@11.0.5/node_modules/uuid/dist/esm-browser/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/.pnpm/axios@1.7.9/node_modules/axios/index.js\");\n\n\nconst DGRAPH_ENDPOINT = \"https://nameless-brook-670073.eu-central-1.aws.cloud.dgraph.io/graphql\";\nconst registerUser = async (username, email, passwordHash, profilePicture, wallet, dailyChallenge, weeklyChallenge, monthlyChallenge)=>{\n    const mutation = \"\\n    mutation RegisterUser($input: AddUserInput!) {\\n      addUser(input: [$input]) {\\n        user {\\n          id\\n          username\\n          email\\n          wallet\\n          dailyChallenge\\n          weeklyChallenge\\n          monthlyChallenge\\n        }\\n      }\\n    }\\n  \";\n    const variables = {\n        input: {\n            id: (0,uuid__WEBPACK_IMPORTED_MODULE_0__.v4)(),\n            username,\n            email,\n            bio: '',\n            wallet,\n            passwordHash,\n            profilePicture,\n            earnedTokens: 0,\n            followers: [],\n            following: [],\n            completedChallenges: [],\n            upcomingChallenges: [],\n            dailyChallenge,\n            weeklyChallenge,\n            monthlyChallenge\n        }\n    };\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(DGRAPH_ENDPOINT, {\n            query: mutation,\n            variables\n        });\n        if (response.data.errors) {\n            const errorMessages = response.data.errors.map((err)=>err.message).join(', ');\n            throw new Error(\"GraphQL Error: \".concat(errorMessages));\n        }\n        return response.data.data.addUser.user[0];\n    } catch (error) {\n        console.error('Error during user registration:', error);\n        // Narrowing the type of error\n        if (error instanceof Error) {\n            throw new Error(error.message || 'User registration failed. Please try again.');\n        } else {\n            throw new Error('An unknown error occurred during user registration.');\n        }\n    }\n};\nconst getUserFromDgraph = async (identifier)=>{\n    const query = \"\\n    query GetUser($identifier: String!) {\\n      queryUser(filter: { or: [{ username: { eq: $identifier } }, { email: { eq: $identifier } }] }) {\\n        id\\n        username\\n        email\\n        wallet\\n        passwordHash\\n        profilePicture\\n        dailyChallenge\\n        weeklyChallenge\\n        monthlyChallenge\\n      }\\n    }\\n  \";\n    try {\n        var _response_data_data, _response_data;\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(DGRAPH_ENDPOINT, {\n            query,\n            variables: {\n                identifier\n            }\n        }, {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return (_response_data = response.data) === null || _response_data === void 0 ? void 0 : (_response_data_data = _response_data.data) === null || _response_data_data === void 0 ? void 0 : _response_data_data.queryUser[0]; // Return the first user found\n    } catch (error) {\n        console.error(\"Error fetching user from Dgraph:\", error);\n        throw new Error(\"Failed to fetch user.\");\n    }\n};\nconst verifyPassword = (inputPassword, storedPasswordHash)=>{\n    // Placeholder for password comparison logic\n    return btoa(inputPassword) === storedPasswordHash; // Replace with proper hash verification\n};\nconst updateBio = async (userId, newBio)=>{\n    const mutation = \"\\n    mutation UpdateUserBio($id: String!, $bio: String!) {\\n      updateUser(input: { filter: { id: { eq: $id } }, set: { bio: $bio } }) {\\n        user {\\n          id\\n          bio\\n        }\\n      }\\n    }\\n  \";\n    const variables = {\n        id: userId,\n        bio: newBio\n    };\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(DGRAPH_ENDPOINT, {\n            query: mutation,\n            variables\n        }, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        if (response.data.errors) {\n            const errorMessages = response.data.errors.map((err)=>err.message).join(', ');\n            throw new Error(\"Dgraph Error: \".concat(errorMessages));\n        }\n        console.log('Bio successfully updated in Dgraph:', response.data);\n    } catch (error) {\n        console.error('Error updating bio in Dgraph:', error);\n        throw new Error('Failed to update bio in the database.');\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q2xFLEVBQUUsT0FBT1UsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsaUNBQWlDQTtRQUMvQyxNQUFNLElBQUlILE1BQU07SUFDbEI7QUFDRixFQUFFIiwic291cmNlcyI6WyIvVXNlcnMvamFrdWJsdXN0eWsvYXBwLm5vY2VuYS9zcmMvdXRpbHMvYXBpL2RncmFwaC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tICd1dWlkJztcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5cbmNvbnN0IERHUkFQSF9FTkRQT0lOVCA9IFwiaHR0cHM6Ly9uYW1lbGVzcy1icm9vay02NzAwNzMuZXUtY2VudHJhbC0xLmF3cy5jbG91ZC5kZ3JhcGguaW8vZ3JhcGhxbFwiO1xuXG5leHBvcnQgY29uc3QgcmVnaXN0ZXJVc2VyID0gYXN5bmMgKFxuICB1c2VybmFtZTogc3RyaW5nLFxuICBlbWFpbDogc3RyaW5nLFxuICBwYXNzd29yZEhhc2g6IHN0cmluZyxcbiAgcHJvZmlsZVBpY3R1cmU6IHN0cmluZyxcbiAgd2FsbGV0OiBzdHJpbmcsXG4gIGRhaWx5Q2hhbGxlbmdlOiBzdHJpbmcsXG4gIHdlZWtseUNoYWxsZW5nZTogc3RyaW5nLFxuICBtb250aGx5Q2hhbGxlbmdlOiBzdHJpbmdcbikgPT4ge1xuICBjb25zdCBtdXRhdGlvbiA9IGBcbiAgICBtdXRhdGlvbiBSZWdpc3RlclVzZXIoJGlucHV0OiBBZGRVc2VySW5wdXQhKSB7XG4gICAgICBhZGRVc2VyKGlucHV0OiBbJGlucHV0XSkge1xuICAgICAgICB1c2VyIHtcbiAgICAgICAgICBpZFxuICAgICAgICAgIHVzZXJuYW1lXG4gICAgICAgICAgZW1haWxcbiAgICAgICAgICB3YWxsZXRcbiAgICAgICAgICBkYWlseUNoYWxsZW5nZVxuICAgICAgICAgIHdlZWtseUNoYWxsZW5nZVxuICAgICAgICAgIG1vbnRobHlDaGFsbGVuZ2VcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgYDtcblxuICBjb25zdCB2YXJpYWJsZXMgPSB7XG4gICAgaW5wdXQ6IHtcbiAgICAgIGlkOiB1dWlkdjQoKSxcbiAgICAgIHVzZXJuYW1lLFxuICAgICAgZW1haWwsXG4gICAgICBiaW86ICcnLFxuICAgICAgd2FsbGV0LFxuICAgICAgcGFzc3dvcmRIYXNoLFxuICAgICAgcHJvZmlsZVBpY3R1cmUsXG4gICAgICBlYXJuZWRUb2tlbnM6IDAsXG4gICAgICBmb2xsb3dlcnM6IFtdLFxuICAgICAgZm9sbG93aW5nOiBbXSxcbiAgICAgIGNvbXBsZXRlZENoYWxsZW5nZXM6IFtdLFxuICAgICAgdXBjb21pbmdDaGFsbGVuZ2VzOiBbXSxcbiAgICAgIGRhaWx5Q2hhbGxlbmdlLFxuICAgICAgd2Vla2x5Q2hhbGxlbmdlLFxuICAgICAgbW9udGhseUNoYWxsZW5nZSxcbiAgICB9LFxuICB9O1xuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KERHUkFQSF9FTkRQT0lOVCwge1xuICAgICAgcXVlcnk6IG11dGF0aW9uLFxuICAgICAgdmFyaWFibGVzLFxuICAgIH0pO1xuXG4gICAgaWYgKHJlc3BvbnNlLmRhdGEuZXJyb3JzKSB7XG4gICAgICBjb25zdCBlcnJvck1lc3NhZ2VzID0gcmVzcG9uc2UuZGF0YS5lcnJvcnMubWFwKChlcnI6IGFueSkgPT4gZXJyLm1lc3NhZ2UpLmpvaW4oJywgJyk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEdyYXBoUUwgRXJyb3I6ICR7ZXJyb3JNZXNzYWdlc31gKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzcG9uc2UuZGF0YS5kYXRhLmFkZFVzZXIudXNlclswXTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkdXJpbmcgdXNlciByZWdpc3RyYXRpb246JywgZXJyb3IpO1xuICBcbiAgICAvLyBOYXJyb3dpbmcgdGhlIHR5cGUgb2YgZXJyb3JcbiAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yLm1lc3NhZ2UgfHwgJ1VzZXIgcmVnaXN0cmF0aW9uIGZhaWxlZC4gUGxlYXNlIHRyeSBhZ2Fpbi4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdBbiB1bmtub3duIGVycm9yIG9jY3VycmVkIGR1cmluZyB1c2VyIHJlZ2lzdHJhdGlvbi4nKTtcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBnZXRVc2VyRnJvbURncmFwaCA9IGFzeW5jIChpZGVudGlmaWVyOiBzdHJpbmcpID0+IHtcbiAgY29uc3QgcXVlcnkgPSBgXG4gICAgcXVlcnkgR2V0VXNlcigkaWRlbnRpZmllcjogU3RyaW5nISkge1xuICAgICAgcXVlcnlVc2VyKGZpbHRlcjogeyBvcjogW3sgdXNlcm5hbWU6IHsgZXE6ICRpZGVudGlmaWVyIH0gfSwgeyBlbWFpbDogeyBlcTogJGlkZW50aWZpZXIgfSB9XSB9KSB7XG4gICAgICAgIGlkXG4gICAgICAgIHVzZXJuYW1lXG4gICAgICAgIGVtYWlsXG4gICAgICAgIHdhbGxldFxuICAgICAgICBwYXNzd29yZEhhc2hcbiAgICAgICAgcHJvZmlsZVBpY3R1cmVcbiAgICAgICAgZGFpbHlDaGFsbGVuZ2VcbiAgICAgICAgd2Vla2x5Q2hhbGxlbmdlXG4gICAgICAgIG1vbnRobHlDaGFsbGVuZ2VcbiAgICAgIH1cbiAgICB9XG4gIGA7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoXG4gICAgICBER1JBUEhfRU5EUE9JTlQsXG4gICAgICB7XG4gICAgICAgIHF1ZXJ5LFxuICAgICAgICB2YXJpYWJsZXM6IHsgaWRlbnRpZmllciB9LFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICB9LFxuICAgICAgfVxuICAgICk7XG5cbiAgICByZXR1cm4gcmVzcG9uc2UuZGF0YT8uZGF0YT8ucXVlcnlVc2VyWzBdOyAvLyBSZXR1cm4gdGhlIGZpcnN0IHVzZXIgZm91bmRcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgdXNlciBmcm9tIERncmFwaDpcIiwgZXJyb3IpO1xuICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCB1c2VyLlwiKTtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IHZlcmlmeVBhc3N3b3JkID0gKGlucHV0UGFzc3dvcmQ6IHN0cmluZywgc3RvcmVkUGFzc3dvcmRIYXNoOiBzdHJpbmcpID0+IHtcbiAgLy8gUGxhY2Vob2xkZXIgZm9yIHBhc3N3b3JkIGNvbXBhcmlzb24gbG9naWNcbiAgcmV0dXJuIGJ0b2EoaW5wdXRQYXNzd29yZCkgPT09IHN0b3JlZFBhc3N3b3JkSGFzaDsgLy8gUmVwbGFjZSB3aXRoIHByb3BlciBoYXNoIHZlcmlmaWNhdGlvblxufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUJpbyA9IGFzeW5jICh1c2VySWQ6IHN0cmluZywgbmV3QmlvOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgY29uc3QgbXV0YXRpb24gPSBgXG4gICAgbXV0YXRpb24gVXBkYXRlVXNlckJpbygkaWQ6IFN0cmluZyEsICRiaW86IFN0cmluZyEpIHtcbiAgICAgIHVwZGF0ZVVzZXIoaW5wdXQ6IHsgZmlsdGVyOiB7IGlkOiB7IGVxOiAkaWQgfSB9LCBzZXQ6IHsgYmlvOiAkYmlvIH0gfSkge1xuICAgICAgICB1c2VyIHtcbiAgICAgICAgICBpZFxuICAgICAgICAgIGJpb1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICBgO1xuXG4gIGNvbnN0IHZhcmlhYmxlcyA9IHtcbiAgICBpZDogdXNlcklkLFxuICAgIGJpbzogbmV3QmlvLFxuICB9O1xuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KFxuICAgICAgREdSQVBIX0VORFBPSU5ULFxuICAgICAge1xuICAgICAgICBxdWVyeTogbXV0YXRpb24sXG4gICAgICAgIHZhcmlhYmxlcyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgfVxuICAgICk7XG5cbiAgICBpZiAocmVzcG9uc2UuZGF0YS5lcnJvcnMpIHtcbiAgICAgIGNvbnN0IGVycm9yTWVzc2FnZXMgPSByZXNwb25zZS5kYXRhLmVycm9ycy5tYXAoKGVycjogYW55KSA9PiBlcnIubWVzc2FnZSkuam9pbignLCAnKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRGdyYXBoIEVycm9yOiAke2Vycm9yTWVzc2FnZXN9YCk7XG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coJ0JpbyBzdWNjZXNzZnVsbHkgdXBkYXRlZCBpbiBEZ3JhcGg6JywgcmVzcG9uc2UuZGF0YSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgdXBkYXRpbmcgYmlvIGluIERncmFwaDonLCBlcnJvcik7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gdXBkYXRlIGJpbyBpbiB0aGUgZGF0YWJhc2UuJyk7XG4gIH1cbn07XG4iXSwibmFtZXMiOlsidjQiLCJ1dWlkdjQiLCJheGlvcyIsIkRHUkFQSF9FTkRQT0lOVCIsInJlZ2lzdGVyVXNlciIsInVzZXJuYW1lIiwiZW1haWwiLCJwYXNzd29yZEhhc2giLCJwcm9maWxlUGljdHVyZSIsIndhbGxldCIsImRhaWx5Q2hhbGxlbmdlIiwid2Vla2x5Q2hhbGxlbmdlIiwibW9udGhseUNoYWxsZW5nZSIsIm11dGF0aW9uIiwidmFyaWFibGVzIiwiaW5wdXQiLCJpZCIsImJpbyIsImVhcm5lZFRva2VucyIsImZvbGxvd2VycyIsImZvbGxvd2luZyIsImNvbXBsZXRlZENoYWxsZW5nZXMiLCJ1cGNvbWluZ0NoYWxsZW5nZXMiLCJyZXNwb25zZSIsInBvc3QiLCJxdWVyeSIsImRhdGEiLCJlcnJvcnMiLCJlcnJvck1lc3NhZ2VzIiwibWFwIiwiZXJyIiwibWVzc2FnZSIsImpvaW4iLCJFcnJvciIsImFkZFVzZXIiLCJ1c2VyIiwiZXJyb3IiLCJjb25zb2xlIiwiZ2V0VXNlckZyb21EZ3JhcGgiLCJpZGVudGlmaWVyIiwiaGVhZGVycyIsInF1ZXJ5VXNlciIsInZlcmlmeVBhc3N3b3JkIiwiaW5wdXRQYXNzd29yZCIsInN0b3JlZFBhc3N3b3JkSGFzaCIsImJ0b2EiLCJ1cGRhdGVCaW8iLCJ1c2VySWQiLCJuZXdCaW8iLCJsb2ciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/api/dgraph.ts\n"));

/***/ })

});